// <auto-generated />
using System;
using AppForTrainings.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppForTrainings.Migrations
{
    [DbContext(typeof(TrainingCampContext))]
    partial class TrainingCampContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppForTrainings.Models.Coach", b =>
                {
                    b.Property<int>("CoachID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoachID");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("AppForTrainings.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembershipType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("AppForTrainings.Models.Sport", b =>
                {
                    b.Property<int>("SportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyMembershipFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportID");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("AppForTrainings.Models.Training", b =>
                {
                    b.Property<int>("TrainingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<int?>("SportID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeAndDateOfTraining")
                        .HasColumnType("datetime2");

                    b.HasKey("TrainingID");

                    b.HasIndex("CoachID");

                    b.HasIndex("MemberID");

                    b.HasIndex("SportID");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("AppForTrainings.Models.Training", b =>
                {
                    b.HasOne("AppForTrainings.Models.Coach", "Coach")
                        .WithMany("Trainings")
                        .HasForeignKey("CoachID");

                    b.HasOne("AppForTrainings.Models.Member", "Member")
                        .WithMany("Trainings")
                        .HasForeignKey("MemberID");

                    b.HasOne("AppForTrainings.Models.Sport", "Sport")
                        .WithMany("Trainings")
                        .HasForeignKey("SportID");

                    b.Navigation("Coach");

                    b.Navigation("Member");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("AppForTrainings.Models.Coach", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("AppForTrainings.Models.Member", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("AppForTrainings.Models.Sport", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
